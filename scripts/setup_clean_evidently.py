#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∏—Å—Ç–æ–≥–æ Evidently UI —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import pandas as pd
import numpy as np
from evidently import ColumnMapping
from evidently.report import Report
from evidently.metric_preset import DataDriftPreset, TargetDriftPreset
from evidently.metrics import DatasetSummaryMetric, ColumnSummaryMetric
from evidently.ui.workspace import Workspace
import os
from datetime import datetime

def setup_clean_evidently():
    print('=== –ù–ê–°–¢–†–û–ô–ö–ê –ß–ò–°–¢–û–ì–û EVIDENTLY UI ===')
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
        if not os.path.exists('./data/processed/test_tall.parquet'):
            print('‚ùå –ù–µ—Ç —Ñ–∞–π–ª–∞ test_tall.parquet')
            return
            
        if not os.path.exists('./data/processed/val_tall.parquet'):
            print('‚ùå –ù–µ—Ç —Ñ–∞–π–ª–∞ val_tall.parquet')
            return
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ–±–æ–ª—å—à–∏–µ –ø–æ—Ä—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        print('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...')
        test_data = pd.read_parquet('./data/processed/test_tall.parquet')
        val_data = pd.read_parquet('./data/processed/val_tall.parquet')
        
        print(f'Test data: {len(test_data)} —Å—Ç—Ä–æ–∫')
        print(f'Val data: {len(val_data)} —Å—Ç—Ä–æ–∫')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ dataset –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        reference_data = val_data.sample(n=min(1000, len(val_data)), random_state=42).copy()
        current_data = test_data.sample(n=min(1000, len(test_data)), random_state=123).copy()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
        np.random.seed(42)
        reference_data['prediction'] = np.random.choice([0, 1], size=len(reference_data), p=[0.5, 0.5])
        current_data['prediction'] = np.random.choice([0, 1], size=len(current_data), p=[0.6, 0.4])
        
        print('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Column Mapping...')
        column_mapping = ColumnMapping()
        column_mapping.target = 'vol_up'
        column_mapping.prediction = 'prediction'
        
        # –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —á–∏—Å–ª–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
        numeric_cols = []
        for col in ['realized_vol', 'tr_vol', 'park_vol']:
            if col in reference_data.columns:
                numeric_cols.append(col)
        
        if numeric_cols:
            column_mapping.numerical_features = numeric_cols[:3]  # –ú–∞–∫—Å–∏–º—É–º 3 –∫–æ–ª–æ–Ω–∫–∏
        
        print(f'Numeric features: {column_mapping.numerical_features}')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –æ—Ç—á–µ—Ç
        print('üìà –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...')
        report = Report(metrics=[
            DatasetSummaryMetric(),
            ColumnSummaryMetric(column_name='vol_up'),
            ColumnSummaryMetric(column_name='prediction'),
        ])
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—á–µ—Ç
        report.run(
            reference_data=reference_data, 
            current_data=current_data, 
            column_mapping=column_mapping
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML
        timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
        html_path = f'./monitoring/evidently_reports/clean_report_{timestamp}.html'
        os.makedirs('./monitoring/evidently_reports', exist_ok=True)
        report.save_html(html_path)
        print(f'‚úÖ HTML –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {html_path}')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ Evidently UI
        print('üéØ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ Evidently UI...')
        workspace_path = './monitoring/evidently_workspace'
        os.makedirs(workspace_path, exist_ok=True)
        
        ws = Workspace(workspace_path)
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
        project = ws.create_project('MLOps Volatility Monitoring')
        print(f'‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: {project.name} (ID: {project.id})')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
        ws.add_report(project.id, report)
        print('‚úÖ –û—Ç—á–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ UI!')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        projects = ws.list_projects()
        print(f'\nüìã –ò—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ UI: {len(projects)}')
        for p in projects:
            print(f'  - {p.name} (ID: {p.id})')
        
        print('\nüåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:8000')
        print('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    setup_clean_evidently()
