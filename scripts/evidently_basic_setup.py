#!/usr/bin/env python3
"""
–ë–∞–∑–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Evidently UI
–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏
"""
import pandas as pd
import numpy as np
from evidently import ColumnMapping
from evidently.report import Report
from evidently.metric_preset import DataDriftPreset
from evidently.ui.workspace import Workspace
from datetime import datetime
import os

def create_basic_evidently_project():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –≤ Evidently UI"""
    
    print("=== –°–û–ó–î–ê–ù–ò–ï –ë–ê–ó–û–í–û–ì–û –ü–†–û–ï–ö–¢–ê EVIDENTLY ===")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        print("üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
        test_data = pd.read_parquet('./data/processed/test_tall.parquet')
        val_data = pd.read_parquet('./data/processed/val_tall.parquet')
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        print("üîß –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
        reference_data = val_data.sample(n=1000, random_state=42).copy()
        current_data = test_data.iloc[:1000].copy()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
        np.random.seed(42)
        reference_data['prediction'] = np.random.choice([0, 1], size=len(reference_data))
        current_data['prediction'] = np.random.choice([0, 1], size=len(current_data))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
        column_mapping = ColumnMapping()
        column_mapping.target = 'vol_up'
        column_mapping.prediction = 'prediction'
        column_mapping.numerical_features = ['realized_vol', 'tr_vol', 'park_vol']
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
        print("üìà –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç...")
        report = Report(metrics=[DataDriftPreset(stattest_threshold=0.1)])
        report.run(reference_data=reference_data, current_data=current_data, column_mapping=column_mapping)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –æ—Ç—á–µ—Ç
        html_path = './monitoring/evidently_reports/basic_drift_report.html'
        os.makedirs('./monitoring/evidently_reports', exist_ok=True)
        report.save_html(html_path)
        print(f"‚úÖ HTML –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {html_path}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ Evidently UI
        print("üåê –î–æ–±–∞–≤–ª—è–µ–º –≤ Evidently UI...")
        workspace_path = './monitoring/evidently_workspace'
        
        # –°–æ–∑–¥–∞–µ–º workspace
        ws = Workspace(workspace_path)
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç
        project = ws.create_project('ML Volatility Monitoring')
        print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —Å ID: {project.id}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –≤ –ø—Ä–æ–µ–∫—Ç
        ws.add_report(project.id, report)
        print("‚úÖ –û—Ç—á–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç")
        
        print("\nüéâ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!")
        print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ Evidently UI: http://localhost:8000")
        print("üìÅ –ü—Ä–æ–µ–∫—Ç: ML Volatility Monitoring")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = create_basic_evidently_project()
    if success:
        print("\n‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ!")
    else:
        print("\n‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
